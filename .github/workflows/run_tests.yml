name: tests and coverage

# Uses the cron schedule for github actions
# 
# https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#scheduled-events
# 
# ┌───────────── minute (0 - 59)
# │ ┌───────────── hour (0 - 23)
# │ │ ┌───────────── day of the month (1 - 31)
# │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
# │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
# │ │ │ │ │                                   
# │ │ │ │ │
# │ │ │ │ │
# * * * * *

on:
  push:
    branches:
      - dev
  pull_request:
    branches: '*'
  schedule:
    - cron: "* * 1 * *"

env:
  OCTFLAGS: --no-gui --no-window-system --silent

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get -y -qq update
        sudo apt-get -y install octave liboctave-dev
        sudo apt-get -y install nodejs npm

    - name: Clone cpp_spm         
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 2

    - name: Install SPM
      run: |
         git clone https://github.com/spm/spm12.git --depth 1
         make -C spm12/src PLATFORM=octave distclean
         make -C spm12/src PLATFORM=octave
         make -C spm12/src PLATFORM=octave install
         octave $OCTFLAGS --eval "addpath(fullfile(pwd, 'spm12')); savepath();"

    - name: Install MarsBar
      run: |
        wget https://sourceforge.net/projects/marsbar/files/marsbar/0.44/marsbar-0.44.zip/download
        mv download.1 lib/marsbar.zip
        unzip lib/marsbar.zip 

    - name: Install Moxunit and MOcov
      run: |
        git clone https://github.com/MOxUnit/MOxUnit.git --depth 1
        make -C MOxUnit install
        git clone https://github.com/MOcov/MOcov.git --depth 1
        make -C MOcov install    
        
    - name: Update octave path
      run: |
        octave $OCTFLAGS --eval "initCppSpm; savepath();"
        octave $OCTFLAGS --eval "addpath(fullfile(pwd, 'tests', 'utils')); savepath();"        

    - name: Prepare data
      run: |
        output_folder='demos/MoAE/output/'
        mkdir $output_folder
        curl http://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.bids.zip --output $output_folder'MoAEpilot.zip'
        unzip $output_folder'MoAEpilot.zip' -d $output_folder
        cd tests
        sh createDummyDataSet.sh
        cd ..

    - name: Run tests
      run: |
        octave $OCTFLAGS --eval "runTests"
        cat test_report.log | grep 0
        bash <(curl -s https://codecov.io/bash)         

